// Ejemplo de vulnerabilidad ALTA - Hardcoded Password
// Este archivo demuestra una vulnerabilidad de alta severidad

const express = require('express');
const app = express();

// VULNERABILIDAD ALTA: Hardcoded password en el código
const DATABASE_PASSWORD = "admin123456";
const API_SECRET_KEY = "super-secret-key-2024";
const JWT_SECRET = "my-jwt-secret-key";

// Función que usa la contraseña hardcodeada
function connectToDatabase() {
  const connectionString = `mongodb://admin:${DATABASE_PASSWORD}@localhost:27017/myapp`;
  console.log('Conectando a la base de datos...');
  return connectionString;
}

// Función que usa la API key hardcodeada
function authenticateUser(token) {
  if (token === API_SECRET_KEY) {
    return { authenticated: true, user: 'admin' };
  }
  return { authenticated: false };
}

// Función que usa JWT secret hardcodeado
function generateJWT(payload) {
  const jwt = require('jsonwebtoken');
  return jwt.sign(payload, JWT_SECRET, { expiresIn: '1h' });
}

module.exports = {
  connectToDatabase,
  authenticateUser,
  generateJWT
};
