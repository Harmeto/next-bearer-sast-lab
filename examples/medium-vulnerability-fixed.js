// VULNERABILIDAD MEDIA - SQL Injection
const mysql = require('mysql2');
const sqlite3 = require('sqlite3');

// VULNERABILIDAD MEDIA: SQL Injection en MySQL
function getUserById(userId) {
  const connection = mysql.createConnection({
    host: 'localhost',
    user: 'root',
    password: 'password',
    database: 'myapp'
  });

  // Construcción insegura de query SQL
  const query = `SELECT * FROM users WHERE id = ${userId}`;
  
  connection.query(query, (err, results) => {
    if (err) {
      console.error('Error en la consulta:', err);
      return;
    }
    console.log('Usuario encontrado:', results);
  });
}

// VULNERABILIDAD MEDIA: SQL Injection con LIKE
function searchUsers(searchTerm) {
  const connection = mysql.createConnection({
    host: 'localhost',
    user: 'root',
    password: 'password',
    database: 'myapp'
  });

  // Query vulnerable a SQL injection
  const query = `SELECT * FROM users WHERE name LIKE '%${searchTerm}%' OR email LIKE '%${searchTerm}%'`;
  
  return new Promise((resolve, reject) => {
    connection.query(query, (err, results) => {
      if (err) {
        reject(err);
        return;
      }
      resolve(results);
    });
  });
}

// VULNERABILIDAD MEDIA: SQL Injection con múltiples parámetros
function getUsersByFilters(filters) {
  const connection = mysql.createConnection({
    host: 'localhost',
    user: 'root',
    password: 'password',
    database: 'myapp'
  });

  let query = 'SELECT * FROM users WHERE 1=1';
  
  if (filters.name) {
    query += ` AND name = '${filters.name}'`;
  }
  
  if (filters.email) {
    query += ` AND email = '${filters.email}'`;
  }
  
  if (filters.role) {
    query += ` AND role = '${filters.role}'`;
  }
  
  if (filters.status) {
    query += ` AND status = '${filters.status}'`;
  }
  
  if (filters.orderBy) {
    query += ` ORDER BY ${filters.orderBy}`;
  }
  
  return connection.promise().query(query);
}

// VULNERABILIDAD MEDIA: SQL Injection en SQLite
function getProductById(productId) {
  const db = new sqlite3.Database('products.db');
  
  // Query vulnerable a SQL injection
  const query = `SELECT * FROM products WHERE id = ${productId}`;
  
  db.get(query, (err, row) => {
    if (err) {
      console.error('Error:', err);
      return;
    }
    console.log('Producto:', row);
  });
  
  db.close();
}

// VULNERABILIDAD MEDIA: SQL Injection con UPDATE
function updateUserStatus(userId, status) {
  const connection = mysql.createConnection({
    host: 'localhost',
    user: 'root',
    password: 'password',
    database: 'myapp'
  });

  // Query UPDATE vulnerable
  const query = `UPDATE users SET status = '${status}' WHERE id = ${userId}`;
  
  connection.query(query, (err, results) => {
    if (err) {
      console.error('Error actualizando usuario:', err);
      return;
    }
    console.log('Usuario actualizado:', results.affectedRows);
  });
}

// VULNERABILIDAD MEDIA: SQL Injection con DELETE
function deleteUser(userId) {
  const connection = mysql.createConnection({
    host: 'localhost',
    user: 'root',
    password: 'password',
    database: 'myapp'
  });

  // Query DELETE vulnerable
  const query = `DELETE FROM users WHERE id = ${userId}`;
  
  connection.query(query, (err, results) => {
    if (err) {
      console.error('Error eliminando usuario:', err);
      return;
    }
    console.log('Usuario eliminado:', results.affectedRows);
  });
}

module.exports = {
  getUserById,
  searchUsers,
  getUsersByFilters,
  getProductById,
  updateUserStatus,
  deleteUser
};
