// Ejemplo de vulnerabilidad WARNING - Information Leakage
// Este archivo demuestra vulnerabilidades de warning/bajo riesgo

const fs = require('fs');
const path = require('path');

// VULNERABILIDAD WARNING: Logging de información sensible
function processUserData(userData) {
  console.log('Procesando datos del usuario:', userData);
  
  // Logging de datos sensibles
  console.log('Email del usuario:', userData.email);
  console.log('Teléfono:', userData.phone);
  console.log('Dirección completa:', userData.address);
  
  // Logging de tokens
  if (userData.token) {
    console.log('Token de acceso:', userData.token);
  }
  
  // Logging de IDs de sesión
  console.log('Session ID:', userData.sessionId);
  
  return userData;
}

// Función que loggea información de error sensible
function handleError(error, userContext) {
  console.error('Error en la aplicación:', error);
  console.error('Contexto del usuario:', userContext);
  console.error('Stack trace completo:', error.stack);
  
  // Logging de información del sistema
  console.error('Información del sistema:', {
    platform: process.platform,
    nodeVersion: process.version,
    memoryUsage: process.memoryUsage(),
    uptime: process.uptime()
  });
}

// Función que loggea datos de configuración
function loadConfiguration() {
  const config = {
    databaseUrl: 'mongodb://admin:secret123@localhost:27017/myapp',
    apiKey: 'sk-1234567890abcdef',
    jwtSecret: 'my-super-secret-jwt-key',
    encryptionKey: 'aes-256-cbc-key-here'
  };
  
  console.log('Cargando configuración:', config);
  console.log('URL de base de datos:', config.databaseUrl);
  console.log('API Key configurada:', config.apiKey);
  
  return config;
}

// Función que loggea información de archivos
function readUserFile(filename) {
  try {
    const filePath = path.join(__dirname, 'uploads', filename);
    const content = fs.readFileSync(filePath, 'utf8');
    
    console.log('Archivo leído exitosamente:', filename);
    console.log('Contenido del archivo:', content);
    console.log('Tamaño del archivo:', content.length);
    
    return content;
  } catch (error) {
    console.error('Error leyendo archivo:', error);
    console.error('Archivo solicitado:', filename);
    console.error('Ruta completa:', path.join(__dirname, 'uploads', filename));
    throw error;
  }
}

module.exports = {
  processUserData,
  handleError,
  loadConfiguration,
  readUserFile
};
