// VULNERABILIDAD CRÍTICA - Command Injection
const { exec, execSync } = require('child_process');
const fs = require('fs');

// VULNERABILIDAD CRÍTICA: Command injection directo
function executeCommand(userInput) {
  // Ejecución directa de comando del sistema sin sanitización
  exec(`ls -la ${userInput}`, (error, stdout, stderr) => {
    if (error) {
      console.error('Error:', error);
      return;
    }
    console.log('Output:', stdout);
  });
}

// VULNERABILIDAD CRÍTICA: execSync con input del usuario
function processFile(filename) {
  // Construcción insegura de comando
  const command = `cat ${filename}`;
  try {
    const result = execSync(command, { encoding: 'utf8' });
    return result;
  } catch (error) {
    console.error('Error processing file:', error);
    return null;
  }
}

// VULNERABILIDAD CRÍTICA: Template string con comando
function backupDatabase(dbName) {
  const timestamp = new Date().toISOString();
  const command = `pg_dump ${dbName} > backup_${timestamp}.sql`;
  
  exec(command, (error, stdout, stderr) => {
    if (error) {
      console.error('Backup failed:', error);
      return;
    }
    console.log('Backup completed:', stdout);
  });
}

module.exports = {
  executeCommand,
  processFile,
  backupDatabase
};
