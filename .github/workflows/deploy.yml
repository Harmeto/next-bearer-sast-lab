name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  scan-and-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run Bearer Security Scan on project
        uses: bearer/bearer-action@v2
        with:
          path: '.'
          format: html
          skip-path: ["node_modules", "public", "reports", ".next", ".git"]
          output: 'reports/$(git rev-parse HEAD).html'
          scanner: sast,secrets
          severity: critical,high,medium,low,warning
          exit-code: 0
          
      - name: Move reports to public directory
        run: |
          # Crear directorio public/reports si no existe
          mkdir -p public/reports
          
          # Mover todos los reportes de reports/ a public/reports/
          if [ -d "reports" ]; then
            cp reports/*.html public/reports/ 2>/dev/null || true
          fi
          
          # Crear reporte principal (el mÃ¡s reciente)
          if [ -d "public/reports" ] && [ "$(ls -A public/reports/*.html 2>/dev/null)" ]; then
            LATEST_REPORT=$(ls -t public/reports/*.html | head -n1)
            cp "$LATEST_REPORT" public/project-scan-report.html
          fi
          
      - name: Create scan info file
        run: |
          cat > public/scan-info.json << EOF
          {
            "repoUrl": "https://github.com/Harmeto/next-bearer-sast-lab",
            "branch": "main",
            "scanDate": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "status": "completed",
            "type": "project"
          }
          EOF
          
          
      - name: Commit and push scan results
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Fetch latest changes and pull before committing
          git fetch origin
          git pull origin main || git pull origin main --allow-unrelated-histories || true
          
          # Add and commit the scan results
          git add public/project-scan-report.html public/scan-info.json public/reports/
          git commit -m "Update security scan report $(date -u +%Y-%m-%dT%H:%M:%SZ)" || exit 0
          
          # Push the changes
          git push origin main

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: scan-and-commit
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build
        run: npm run build
        env:
          NODE_ENV: production
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-and-deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
